[tool.poetry]
name = "rasa_helpers"
version = "0.1.0"
description = "Collection of tools useful when developing with Rasa"
authors = ["EdC <etienne@translatorswithoutborders.org>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/E-dC/rasa_helpers"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Human Machine Interfaces",
    "Topic :: Software Development :: Testing",
    "Intended Audience :: Developers"
]

[tool.poetry.scripts]
rh = "rasa_helpers.cli_main:main"
rasa-helpers = "rasa_helpers.cli_main:main"

[tool.poetry.dependencies]
python = ">=3.7,<3.9"
rasa = "^2.8.16"
"ruamel.yaml" = "^0.16.13"
mypy-extensions = "^0.4.3"
sanic = "<=21.9.3"

[tool.poetry.dev-dependencies]
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
pytest-flakes = "^4.0.5"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
tag_format = "$version"
version_files = [
    "rasa_helpers/__init__.py:__version__",
    "pyproject.toml:^version"
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -v --cov rasa_helpers"
testpaths = [
   "tests"
]
filterwarnings = [
    "ignore::DeprecationWarning:tensorflow.*:",
    "ignore::DeprecationWarning:keras_preprocessing.*:",
    "ignore::DeprecationWarning:flatbuffers.*:",
    "ignore::UserWarning:tensorflow.*:",
    "ignore::DeprecationWarning:future.*:"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "nlg: NLG tests",
    "nlu: NLU tests",
    "models_needed: Tests needing trained models to function",
    "app_updater: NLG AppUpdater tests",
    "response_fetcher: NLG ResponseFetcher tests",
    "extractors: NLG ResponseFetcher extractors tests",
    "tracker: Test trackers tests"
]

[tool.coverage.run]
omit = [
    "tests/*",
    "rasa_helpers/__init__.py",
    "rasa_helpers/setup_logging.py"
]


[tool.black]
line-length = 90
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.mypy_cache
    | _build
    | build
    | dist
  )/
)
'''

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


